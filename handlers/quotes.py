"""
–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —Ü–∏—Ç–∞—Ç
"""
import logging
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command

from localization.messages import get_message, get_user_language
from services.quotes_api import QuotesAPI

router = Router()
logger = logging.getLogger(__name__)


@router.message(Command("quote"))
async def quote_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /quote, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–π —Ü–∏—Ç–∞—Ç—ã"""
    user_id = message.from_user.id
    lang = get_user_language(user_id)
    
    #–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    loading_msg = await message.answer(get_message("loading_quote", lang))
    
    try:
        #–ü–æ–ª—É—á–∞–µ–º —Ü–∏—Ç–∞—Ç—É —á–µ—Ä–µ–∑ API
        quotes_api = QuotesAPI()
        quote_data = await quotes_api.get_random_quote()
        
        if quote_data:
            #–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            quote_text = f"üí≠ \"{quote_data['text']}\"\n\n‚Äî {quote_data['author']}"
            
            #–ú–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ü–∏—Ç–∞—Ç–æ–π
            await loading_msg.edit_text(quote_text)
            
            logger.info(f"User {user_id} received quote from {quote_data['author']}")
        else:
            #–ï—Å–ª–∏ —Å API –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
            error_text = get_message("quote_api_error", lang)
            await loading_msg.edit_text(error_text)
            logger.warning(f"No quote data received for user {user_id}")
            
    except Exception as e:
        error_text = get_message("quote_fetch_error", lang)
        await loading_msg.edit_text(error_text)
        logger.error(f"Error fetching quote for user {user_id}: {e}")


@router.message(F.text.in_(["üí° –ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É", "üí° Get Quote"]))
async def quote_button_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã"""
    await quote_handler(message)


@router.message(F.text.in_(["üîÑ –ù–æ–≤–∞—è —Ü–∏—Ç–∞—Ç–∞", "üîÑ New Quote"]))
async def new_quote_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ü–∏—Ç–∞—Ç—ã"""
    await quote_handler(message)
