"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ (/start, /help, /language)
"""
import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command

from localization.messages import get_message, set_user_language, get_user_language
from utils.keyboards import get_language_keyboard, get_main_keyboard
from storage.database import Database

router = Router()
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def start_handler(message: Message):
    """–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start """
    user_id = message.from_user.id
    username = message.from_user.username or "Unknown"
    
    #–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db = Database()
    await db.add_user(user_id, username)
    
    lang = get_user_language(user_id)
    welcome_text = get_message("welcome", lang).format(
        name=message.from_user.first_name or "User"
    )
    
    await message.answer(
        welcome_text,
        reply_markup=get_main_keyboard(lang)
    )
    
    logger.info(f"User {user_id} ({username}) started the bot")


@router.message(Command("help"))
async def help_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help """
    user_id = message.from_user.id
    lang = get_user_language(user_id)
    
    help_text = get_message("help", lang)
    await message.answer(help_text)
    
    logger.info(f"User {user_id} requested help")


@router.message(Command("language"))
async def language_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /language, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —è–∑—ã–∫ –±–æ—Ç–∞"""
    user_id = message.from_user.id
    lang = get_user_language(user_id)
    
    text = get_message("choose_language", lang)
    await message.answer(text, reply_markup=get_language_keyboard())
    
    logger.info(f"User {user_id} opened language selection")


@router.callback_query(F.data.startswith("lang_"))
async def language_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã, –æ—Ç–≤–µ—á–∞—é—â–µ–π –∑–∞ –≤—ã–±–æ—Ä —è–∑—ã–∫–∞"""
    user_id = callback.from_user.id
    selected_lang = callback.data.split("_")[1]
    
    #–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    set_user_language(user_id, selected_lang)
    
    #–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    text = get_message("language_changed", selected_lang)
    await callback.message.edit_text(text)
    
    #–ù–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π, –Ω–æ –Ω–∞ –¥—Ä—É–≥–æ–º —è–∑—ã–∫–µ
    await callback.message.answer(
        get_message("welcome", selected_lang).format(
            name=callback.from_user.first_name or "User"
        ),
        reply_markup=get_main_keyboard(selected_lang)
    )
    
    await callback.answer()
    logger.info(f"User {user_id} changed language to {selected_lang}")


@router.message(F.text.in_(["üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏", "üìã My Tasks"]))
async def tasks_button_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–¥–∞—á"""
    from handlers.tasks import view_tasks_handler
    await view_tasks_handler(message)


@router.message(F.text.in_(["üí° –ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É", "üí° Get Quote"]))
async def quote_button_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã"""
    from handlers.quotes import quote_handler
    await quote_handler(message)


@router.message(F.text.in_(["üåê –Ø–∑—ã–∫", "üåê Language"]))
async def language_button_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã,–∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ —Å–º–µ–Ω—É —è–∑—ã–∫–∞"""
    await language_handler(message)
